{{- if .Values.blueGreen.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "analysis-service.fullname" . }}
  labels:
    {{- include "analysis-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      {{- include "analysis-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "analysis-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "analysis-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.service.targetPort }}
          protocol: TCP
        env:
        {{- if .Values.configMap.create }}
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          valueFrom:
            configMapKeyRef:
              name: {{ include "analysis-service.fullname" $ }}
              key: {{ $key }}
        {{- end }}
        {{- else }}
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        {{- if .Values.secrets.create }}
        {{- range $key, $value := .Values.secrets }}
        {{- if and (ne $key "create") (ne $key "name") }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ include "analysis-service.fullname" $ }}
              key: {{ $key }}
        {{- end }}
        {{- end }}
        {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.cloudSqlProxy.enabled }}
      - name: cloud-sql-proxy
        image: {{ .Values.cloudSqlProxy.image }}
        command:
          - "/cloud_sql_proxy"
          - "-instances={{ .Values.cloudSqlProxy.instance }}=tcp:{{ .Values.cloudSqlProxy.port }}"
          - "-credential_file=/secrets/cloudsql/credentials.json"
        securityContext:
          runAsNonRoot: true
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      {{- end }}
      {{- if .Values.cloudSqlProxy.enabled }}
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloud-sql-instance-credentials
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  strategy:
    blueGreen:
      activeService: {{ include "analysis-service.fullname" . }}-active
      previewService: {{ include "analysis-service.fullname" . }}-preview
      autoPromotionEnabled: false
      scaleDownDelaySeconds: 30
      prePromotionAnalysis:
        templates:
        - templateName: success-rate
        args:
        - name: service-name
          value: {{ include "analysis-service.fullname" . }}-preview
      postPromotionAnalysis:
        templates:
        - templateName: success-rate
        args:
        - name: service-name
          value: {{ include "analysis-service.fullname" . }}-active
{{- end }}
