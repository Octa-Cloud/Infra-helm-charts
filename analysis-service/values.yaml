# =============================================================================
# Analysis Service Helm Chart Values
# =============================================================================

# =============================================================================
# 이미지 설정
# =============================================================================
image:
  repository: octacloud/analysis-service
  tag: "e9c51d2656e7a91381a63205f31447a2dc364df3-18524744265"
  pullPolicy: IfNotPresent
# =============================================================================
# 서비스 설정
# =============================================================================
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
# =============================================================================
# 배포 설정
# =============================================================================
replicaCount: 3
# =============================================================================
# 리소스 설정
# =============================================================================
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 512Mi
# =============================================================================
# 헬스 체크 설정
# =============================================================================
livenessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 60
  periodSeconds: 30
  failureThreshold: 5
  timeoutSeconds: 10
readinessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 60
  periodSeconds: 30
  failureThreshold: 5
  timeoutSeconds: 10
# =============================================================================
# 환경 변수 설정
# =============================================================================
env:
  # 기존 환경변수들 (유지)
  REDIS_HOST: "10.226.34.155"
  REDIS_PORT: "6379"
  PYTHONUNBUFFERED: "1"
  MONGODB_URI: "mongodb://mongodb.microservices-dev.svc.cluster.local:27017/mong"
  DATABASE_URL: "mysql+pymysql://monguser:mongpassword123@localhost:3306/mong-analysis?charset=utf8mb4"
  DB_USER: "monguser"
  DB_PASSWORD: "mongpassword123"
  DB_HOST: "127.0.0.1"
  DB_PORT: "3306"
  DB_NAME: "mong-analysis"
  KAFKA_ENABLED: "true"
  KAFKA_BROKERS: "pkc-gq2xn.asia-northeast3.gcp.confluent.cloud:9092"
  KAFKA_SECURITY_PROTOCOL: "SASL_SSL"
  KAFKA_SASL_MECHANISM: "PLAIN"
  KAFKA_SESSION_TIMEOUT_MS: "45000"
  KAFKA_PROTOBUF_ENABLED: "true"
  TOPIC_BRAINWAVE_INPUT_RAW: "brainwave.input.raw"
  TOPIC_BRAINWAVE_SPLIT_EPOCHS: "brainwave.split.epochs"
  TOPIC_BRAINWAVE_ANALYZED_EPOCH: "brainwave.analyzed.epoch"
  TOPIC_BRAINWAVE_PERSIST_REQUESTS: "brainwave.persist.requests"
  TOPIC_DLQ: "brainwave.dlq"
  GROUP_BRAINWAVE_SPLITTER: "brainwave-splitter"
  GROUP_BRAINWAVE_ANALYZER: "brainwave-analyzer"
  GROUP_BRAINWAVE_AGGREGATOR: "brainwave-aggregator"
  GROUP_BRAINWAVE_DB_WRITER: "brainwave-db-writer"
  # 새로 추가된 환경변수들 (음성 분석 기능)
  # Logging
  LOG_LEVEL: "INFO"
  LOG_PROFILE: "text"
  # Sound worker defaults
  YAMNET_SAMPLE_RATE: "16000"
  YAMNET_CONFIDENCE: "0.87"
  YAMNET_MODEL_HANDLE: "https://tfhub.dev/google/yamnet/1"
  # Sound splitter
  SOUND_SPLITTER_SAMPLE_RATE: "16000"
  SOUND_SPLITTER_CHUNK_SECONDS: "30"
  SOUND_SPLITTER_MAX_CHUNK_BYTES: "200000"
  FFMPEG_BIN: "ffmpeg"
  # Processing workers
  BRAINWAVE_PROC_WORKERS: "2"
  SOUND_PROC_WORKERS: "2"
  # Models
  MODELS_DIR: "./app/models"
  # Kafka 추가 설정
  WAIT_FOR_KAFKA: "1"
  WAIT_TIMEOUT_SEC: "120"
  KAFKA_CLUSTER_ID: "LON0w_3SROKgq1Y-efGUBw"
  # Sound topics
  TOPIC_SOUND_INPUT_RAW: "sound.input.raw"
  TOPIC_SOUND_SPLIT_EPOCHS: "sound.split.epochs"
  TOPIC_SOUND_ANALYZED_EVENT: "sound.analyzed.event"
  TOPIC_SOUND_PERSIST_REQUESTS: "sound.persist.requests"
  # Sound consumer groups
  GROUP_SOUND_SPLITTER: "sound-splitter"
  GROUP_SOUND_ANALYZER: "sound-analyzer"
  GROUP_SOUND_DB_WRITER: "sound-db-writer"
  # Retry
  RETRY_MAX_ATTEMPTS: "3"
  RETRY_BACKOFF_MS: "200"
  # Sound analysis
  SOUND_YAMNET_MODEL_URL: "https://tfhub.dev/google/yamnet/1"
  SOUND_YAMNET_CLASS_MAP_URL: "https://raw.githubusercontent.com/tensorflow/models/master/research/audioset/yamnet/yamnet_class_map.csv"
# =============================================================================
# 서비스 계정 설정
# =============================================================================
serviceAccount:
  create: true
  name: ""
# =============================================================================
# ConfigMap 설정
# =============================================================================
configMap:
  create: true
  name: ""
# =============================================================================
# Secret 설정
# =============================================================================
secrets:
  create: true
  name: ""
  # 민감정보는 Sealed Secrets로 관리합니다. (빈 값 유지)
  JWT_SECRET: ""
  KAFKA_SASL_USERNAME: ""
  KAFKA_SASL_PASSWORD: ""
  # 새로 추가된 JWT 설정
  JWT_ALGORITHM: "HS256"
  JWT_ACCESS_SUBJECT: "AccessToken"
  JWT_REFRESH_SUBJECT: "RefreshToken"
  JWT_TOKEN_HEADER: "Authorization"
  JWT_BEARER_PREFIX: "Bearer"
  JWT_ID_CLAIM: "id"
sealedSecrets:
  enabled: false
  encryptedData:
    # 다음 키에 kubeseal로 암호화한 값을 세팅하세요
    JWT_SECRET: "AgBcOz5Ao1RsuIah4UHqJXH4vSWYp237RgqUaG5hid/nHK2QCUNInwtwlagg/wn+UhocGAwlWcQb0OAINKtl5x1cZjma8QyRlMz2XKn0YOnHSnFxo1ruE0q7f/VVsvcJ2YEtnUrybNUT7zX3y0fwnbuwcvNtu4LkQWIAy+RdtHu14MHhKaskkvSo1D76j3XgzZdswA1merM2u84QFP0WCTq4HvckDzdH4Dpja8oo5jqBi/VcEXLJZJ9eo4ntY5Ff6f6Qf21Mzn+p8IBzeT8fyetCnyORayRh+HaRo1w7qhHOBOCY4HNcxiwWHscnmJRvD5kB8DShFcpAI752U4dnbceCvXNR51LtrMXPlaueDqZm2Znrk19yLgrPmrKqob3T3Z6R1qqd7jFVTq/ScoKKk9+VW1RPg6LiJNzxhsBDCXYX1YQpaaiSLWmNjFg0yw8muWTXOrDgbZKpdP3UaRqKZed8Y6iL2OLlUUaY1nHVZD05ArzfIAkakM5KjXeAzDhcd2jQ44uXcAu6YFN1AsHG2EfwTusAeQ81Q8CqOECMnSXlD7BTKyIm5ExRytVM1RhjjQ3AiWHHoRtOVsZvFdW9HDykZWV1EnhTwGjlUmTKjo9AjRVpp2krfV79Y0cHv3PdmXaGPNfHGB776dBItH2WMSE0u77nnDPEkkjzi4SyuCNFzX3/eidK4Drz6XzxUsKZVOJNtknbrOJArwoVfqG7Nl8xfI/iWnO3SsTDGfPJfIjmjlIOZX6zRVYgnlz6jEC4GElZJIVzHfmyDKLgvmw+DzowYZ2bx/jiPvHt/edVunw5gEODuLxlmi/lXQ=="
    JWT_ACCESS_SUBJECT: "AgB86Y0LRPbmjBpD5XY/012TIcwQ8apP2jxPY+jKPPl5R2HnkcJgxr9mdBh0qVKKGujOZk2JTBQgkO70kOylIFNeMi8BPiGqn+cx6hWkGfxaxmUcQYOCHk7/+WQ4+6hbMzTG5B1zquKol8T4Iggdb5PO7oxsw8w0YippAxYpL1e5MOQpPH0LISLdzQ4bZnrHBtrVJxOjpIFMPE8SEuOjPedfMg/JfuJFJhfD3mRTpDbooPXh3ijVD5oUlscyFfOrRb1udQgkKHjl60BL71NO0hHlvbyGpCbM7sdGhq04V93dniW26e7DQTiOh1cQONrWQf7aGXUhEs1gXeOBcMZbWJgjMY26CzuRwieXRnXg5DVAjsSPc+KD1aArLwJQesePjQJ6S14ZKZaFFjgrPjlgDcw34M2ygT4ou7s4t5Zy1ExIAukomzlgFk9Mw6y4r2E5Y6dzenZEpwUPdrT/WcywVddWZuLCnMnCFdatAXXnt7ysPgc7suX8Iao9HeSp2poQBWlrN9TNsTVIMyFQcTUAlPHcezNRGobCEa7OXZZuUHGmtklkRa+rmAwd7rI2Mas9Ev98cx0K8mM40I17hbYP5CLGCdDo6swuYc7qydij1RqMnC3gsU12Kt3PsjlwmCUyRL7y9EHUvF+52sOCbgaJXEuEY5Hf4s0l4RWBhsfFqc+GBQfMhGJ8WRTzslxKPsMqzXwN4tPKomsgOa64Ork="
    JWT_ALGORITHM: "AgC2MGdrus/tvSJVgP0ZrAa9W/hchJZlOARAtSX5x2kVIyp9DtimT0eA16Z7hwDKRLLB2s+XmMHFZ7R5n26IRnqdkcgEXyGfHWOtMaA245GGPzF9sIHosOy72FNxuecDovp43T/QI0vdnBblI+XdvDHaRtUjnz0eUWzXoGqjXcQ/b2hDKAuJ1M3p+ZujVcJMfRzqDiegubQbi3hk97LjTxxiN219sCayFijkageehFJeOua7EcUKgPxHVzJv/I7Z7w6y2SNDw1qrpz0Tr4UldijMT2b3SpPherzk1tcRinos+mBVE1y73S4hoTjeV/Evh988RRT6HozMArg+a+bRqlQK4T9XtpONAjOnaK68UcJNHCFRllbncDeSTBQyejg71eGfgysCRcNmDU8+7k5sosebz0R9fyFOxe8Br/qI7Sr+QRT3P5EcgNYhMascsamFTl/cJoq+eTcor5imWziBU/S3LP29sFx/o+MMpKXbNcosqm0EVKs/JmZFIwz6heIK/25gFqShhwg05TJZn9rpMxVONejYTf9l+Uq5GrJX6EAZkl8C/q+yLuxitHEx4XLrZomfbrg4L9dCWSFYF/VSYwmD2i88+LYf4KSLgyJbzltZujPoQnlOOeJzw6oOwevpmoeZ02zuMroKUtaVL+D1heKk2B2nMGiA/zuZgyAPAOl5d+XgPxs82vrVeGBMVoKYch8WCYfFuJE="
    JWT_BEARER_PREFIX: "AgAPTYRPtTRXFJVW+pRSWgkSsFGwSManNAa6wjuDYuQHo5meUcBmNGRHk+6xbA0N879vYdnawxUyRZhK9XnAe7znQ0asNKE8Oskf6uc5unDLCEuZV1Dfgb50wN72XBS9iNyrCoOHlhtG3g2wyHmbLjK5RXwoIOwbaOAr0P0Mzw4ao5IId8zNztky4ZHMY4cr9awS67uQgwRhbH/4dn95LdOo7/eZogwcveUinFbQ9ESMF0r4h7sl8njsn4oxCHjUX1izvyysonl/K4Saaui7FAp7Tg9jyxxeRRb/P7ka5AD/7Z5doCck3ST/drXXsA/KaY5lxEym+DLGxE5bwuDoqqsWB6080kvJvcfm2YbG10GpifdTWBtZN18j85sMyPviky7PB6ZVCVfDXG4lSfRSmuaRT3wU5VVY98AC1LfPbkTcQ+BupN4cSLXvgd0JFH7HvRP7NpAGXgJgtuBpEQ5F1wbP6pZgUad3SR4k/Pq5m1jX6+r0rqkw88kpkxAMiVldNmz9lrKTKjETMCLQC+OsBiXFuoY0oceArSVDagUxoHEX9s4m69dtdYc0/+KIXV/+xbsqXUFlbys/eCQOIYaC471jGOobfZopi2DyiWSc/FVX7nyBfhOoeeJ3GOcCGiW+DTu1KFs3QoC0+SP6tufjSrliV6Ku3G7+Ch6kLMtv6jThCvQakNMY09U/NgqSd5n2o3755NIy6IU+"
    JWT_ID_CLAIM: "AgA5Jd0YwjhdiAMisx8PquWvMh1myoqZuamiizhcsHzRXKKRI4uKeZXFj+hoDzKCqm5rrxvRbauNS36r3+Zmm82tQKOCHZb7vtB0kqpAKvMzBjDEUgdLyTGxw8Zj0EY/P9YLfL+jnZ8PK9/fQYYka+w8kFydLvvO3JsmTXB2qdXXiHgLMeGwwOj0bz0b1rqx2KCChKtmqygJMYAZUbSWQgXRZgNAPc+l2a19sy5M/fi25mivslyJMGx1iID5ARdQzaJC25RTO0zx2OgUgnmfo+D2QL/Ishzgs9/LU0dkEvnKY5pUlCTLhk3TAxgRgv6rHxURssOv3nrfqvyc4iah4Awe31PQuyTygToMVVNqg6FQHGtG4O3FY17qYh4ljW+P3++1MKiiZhfehVLqnlA7NbuxleqwnfUHM4V8h99pOh9Gmv606CzFBmctK7aYvWlMIOQPYrrX32wFTwgu1ILbfia+deonoI46FUv+SxWmD/bH4u4kvGEho9tVf7XJEuftmAcEYW8v4SrSSWJdLYT734+53XjxZzfm2EQHWZmAEUnUbWg8w+Hrxo+5Ck1mKH2lj3KB4HWxO9e5hIkEFzOYPjUdr69nPddDFsKraSBECaPTHQg/FUSqBdUw4tyZ9KDk6J9MOyXUvHwu7ZhakWxA9QumJ82RGT8cF0RJnDbU63/Bq2UwXXX6rELJPVgvFc7JsKNyKio="
    JWT_REFRESH_SUBJECT: "AgC1rhxOdVtf38Cr5UrP+oVtAjXXKuuS4OilpAEQZaNv7Jqlh7cnAjeRfBPYnvOg2zXQzaqLCggHVmqmpBAFbCSrl37Zt5FreKVoGVU6PEOFZQaAVRRctnWUwWnYPqY8QWGrAi37QUGYBfAfHT6aifAOOys3Ym7gEuwkoVjZbP3fi6ytO4UiSCDsSILYO5Lz08Oo4RW9dLHSt1zY1cvulYxhYdy51moK3HsLU3mS72yxDh8rKNeD0iocqzue8pFE/UpgZ82Pu/Y6BrCPBuzdi6mCRC5dFVWUoWenR7AkDEgWF5mRnX1lFZGRsmPdN/gzxN/XuaeoIbUrluxA5Ds8bkh5Gkh/FDFtsJoQOPtRGdaBXMtyF/p2nkxtJpEugxd9hHY+CqJc3pO3yTePYDKnbaAdf9wcqwwXlj8VIUsWlafBARvKwFwYqUB5t2dlkCuXNcarYKn4YkIipr8l+xk97R9P9rHpfKq3gkZn7y7JrbjpHJuYyRWaJaZCfpwKlU/0gPFjtEwlpmIfKpsiQxu3UNWd6g4geLGoyAMDua4ptNXIgKG8CKIoLr+dtidXQHR+BRSuOIuNJhGloDur+K9Qh/V6C3+47bvPSJsso5I4uvjnyfK+jyiQYI2DFwv9WvnlhrE/+I6BC7up+JTNVIRY4lbudGmtYQHR+y05prTIro3ht0VoyGiDp2N4hnWxjFn2tOkES1o5mXUb5DvN1YYW"
    JWT_TOKEN_HEADER: "AgAIc4iro4Mc1Nd7Tu9JnlVLf1RxkZpdh775YL7c5zCD+/YCRswMHz1mNSmcCsD8b2+XP/jwKt+HWLQ5oFf2fG5w1S7yf2IQSWr3n9kVGm0VqAsYJZV8219LRGMmIWU9WMw5fLOj5oA7/PywKtUOgaxytCnNOzDbNbIfgvCp+wUiVlBQQuaJ4EPsf/OrSAYuv+Bxho5MF/bc+/ncFXkImBY+HyRCMfBgPmjCTWeShpgY3fk4XUHllY69q3++rsFJGc/Byx3qUrSc3476LGG2UObkre7uuLVYcBVcVqSst9wV5QT6a3c81AoBOsFmYZJYjxvw1XpOjU6MPJCq9O0hjEGim6VC3Vdy4x/at8XdKewmM4LCgbZ/kYoTpwOPWCTWyPMZYjQz/NU1u9pchH1CIdoDBcT+vaM2ebWuR5MBZ4/ncE23rFhKyXUNTciFg3dPtVV+xvmvf2wXLKzxNTuK1wztf/q6an0qJ6Sb1or/UvCQb3qOpniog3a5nwUUDNPyEu66Gpc1gWnzWlY35+H/x5WX76RJQteWA29sLjbnEfxVm0CDS4wzyPijUsCWhFkt5KEy+EM6AVMB7uCWTVjqcpi9jaNSGKzi8PClWUyD+mz/rJGPb+RJzziIXvBRdOrvYEX0TvSjbpAhmvWMVBnwms5QUqMiU3Rneby0ZEYxraS6HDUTZRnPfWFf5kSkvXpvKsK/MeFRMcph0koKo+iGSQ=="
    KAFKA_SASL_USERNAME: "AgCVFk2Ou0Y3JhisKx1Vat38GTLsMkQQlKZz+EqXgql2uH5LY6HOI0JMCZJcLdZnv8hu8njRM2zzIvY2jzSYC+J7ydfmo/jLdYarZovnGrWfd8V9sOIHzjd3JEkdZo0bq9FGDTnXWLFDqb98VinG3zwe4g2FlvyT1iZRtF0mQPSbrw0sYIDyVPHsWtmQmxNMTD3r/mYEm6IlIJtPbJ/LKqDPGTOODBAVUl2koE0wgYx4xARuysBAihhoIwke28PjfkcVhTEVaVEW3NG11tlD+o0Isw4mDvgSElQxo7pH7SvtGXcSECxfFKf/Y7IYCQiAmTWXEOispvuhPYGIYJUEZZJ2d2Tr/lT/DDxgBGy4bGwnm0fXGswtl1yCbyCA+4h5dJNqGURptfBIZo6BneNC6whzyg4C4ME0iSuOyn3gGCxEmCOke25aCNk9uqKLIYidoBzrXl43aF26P1vgAGyrsW+16QnW//MZy/JHsBqHXvV6/g6ctSiQ881E60VROTbWeMd3nW+/ZIIQOhghRy9z+cW+3fk9Th/vODBwwvw4NMyvVPT4FpWYJS79HMM6JAYeLs2xS08iTBudQviMVQgvU3FqorKzBYFzF1AMTHzS6R6+ekflh8aYbZKMoI+sCOB2Gu/B6GhjLLfBHIgrzJEj/wvsQgCI3ytWJCk2Und3JDWMe1vmUWWPw28cVcXIzgfd7GGiZWIDFAU6z2nfAQ=="
    KAFKA_SASL_PASSWORD: "AgAPTVp5/3oT42KLtkZMzdaa0+xX0XZKgm+SjZted3oAaQbaMi8rlX3/hCfchM3r/RIyccSeVmoKTMYphJ6mHGu2woJiACI0VCi4uO2OwC++4+1kYijehIbXaQbIhj3VE872ek34EQq/Hcb4yvRzgEMfcsZGSTZprzq2GegIO+hpMvtC3RAD+oGeY6gZ1LJzkOSEUkADhRA+MyQNbB/WVjFlny5wZ8X+WARi2saBc8G2OYqTnNPvViosWAJGsYA/385/lt24hn9Mu85UILPMuqLzXo4f9ssyZme6mJA5Je9qjyGsNVltFuKFWSPUTY7zE75dPJiWjCVnA9GT8erUuHNv+1KgYLxIBb3eLRg/xC1sMHRBFawXKN6WEQY9mlTZO+RvkkjZdjob2wwTuGAD1N1DbG4NTz/kPpvOoVlBm3KBjtb+mNfswBFRe3SleZ6B+5P4qJP0VmgRQKkif1g8qfCaoxXyggHD6yxF8sMMKoEA6lyLTBlSFYbOMbNWrLyNz5Za/WlhUi1WAHPBEiqcM9QWCo0fyXRp2dvzopifSO2p/wjKWlZKvEyuniWyN9q6GduqVHuBl38BCMv41b1sE74rKt4uhKIUaotKTE0SDAkyRSPL3zF+oXs19DbvCzqvtZM9xaxa7+a8rMgqAY27fuhhh7JSjhCHJXKUY/goAT1PclThlEPUeZlGIVxlCKdKxQqMMxeOmTz+Y9Y5IQWRhRI="
# =============================================================================
# Ingress 설정
# =============================================================================
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
  hosts:
    - host: "api.mong.live"
      paths:
        - path: /api/analysis
          pathType: Prefix
  tls:
    - secretName: api-mong-live-tls
      hosts:
        - "api.mong.live"
# =============================================================================
# 노드 선택자
# =============================================================================
nodeSelector: {}
# =============================================================================
# 톨러레이션
# =============================================================================
tolerations: []
# =============================================================================
# 어피니티
# =============================================================================
affinity: {}
# =============================================================================
# Cloud SQL Proxy 설정
# =============================================================================
cloudSqlProxy:
  enabled: true
  image: gcr.io/cloudsql-docker/gce-proxy:latest
  port: 3306
  instance: mong-develop:asia-northeast3:mong-mysql
# =============================================================================
# Blue-Green 배포 설정
# =============================================================================
blueGreen:
  enabled: true
  activeHash: "active"
  previewHash: "preview"
  autoPromotionEnabled: true
  scaleDownDelaySeconds: 30
# =============================================================================
# 추가 설정
# =============================================================================
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
imagePullSecrets: []
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70
lifecycle: {}
