{{- if .Values.grafana.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: {{ .Values.namespace.name }}
  labels:
    app: grafana
    component: config
data:
  grafana.ini: |
    [server]
    root_url = http://localhost:3000/
    
    [security]
    admin_user = {{ .Values.grafana.admin.user }}
    admin_password = {{ .Values.grafana.admin.password }}
    
    [users]
    allow_sign_up = false
    
    [auth.anonymous]
    enabled = true
    org_role = Viewer
    
    [datasources]
    default = loki
    
    [log]
    mode = console
    level = info
    
    [provisioning]
    datasources = /etc/grafana/provisioning/datasources
    dashboards = /etc/grafana/provisioning/dashboards

  datasources.yaml: |
    apiVersion: 1
    
    datasources:
      - name: Loki
        type: loki
        access: proxy
        url: http://loki:3100
        isDefault: true
        editable: true
        
      - name: Mimir
        type: prometheus
        access: proxy
        url: http://mimir:9009
        editable: true
        
      - name: Tempo
        type: tempo
        access: proxy
        url: http://tempo:3200
        editable: true
        jsonData:
          tracesToLogs:
            datasourceUid: 'loki'
            tags: ['job', 'instance', 'pod', 'namespace']
            mappedTags: [{ key: 'service.name', value: 'service' }]
            mapTagNamesEnabled: false
            spanStartTimeShift: '1h'
            spanEndTimeShift: '1h'
            filterByTraceID: false
            filterBySpanID: false
          tracesToMetrics:
            datasourceUid: 'mimir'
            tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
            queries:
              - name: 'Sample query'
                query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
          serviceMap:
            datasourceUid: 'mimir'
          search:
            hide: false
          nodeGraph:
            enabled: true
          lokiSearch:
            datasourceUid: 'loki'

  dashboards.yaml: |
    apiVersion: 1
    
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards
{{- end }}
