{{- if .Values.tempo.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempo
  namespace: {{ .Values.namespace.name }}
  labels:
    app: tempo
    component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tempo
      component: server
  template:
    metadata:
      labels:
        app: tempo
        component: server
    spec:
      initContainers:
      - name: init-storage
        image: busybox:1.35
        command: ['sh', '-c', 'mkdir -p /tmp/tempo && chmod -R 777 /tmp/tempo']
        volumeMounts:
        - name: storage
          mountPath: /tmp/tempo
      containers:
      - name: tempo
        image: "{{ .Values.tempo.image.repository }}:{{ .Values.tempo.image.tag }}"
        imagePullPolicy: {{ .Values.tempo.image.pullPolicy }}
        ports:
        - containerPort: 3200
          name: http
        - containerPort: 14268
          name: jaeger
        - containerPort: 4317
          name: otlp-grpc
        - containerPort: 4318
          name: otlp-http
        args:
        - -config.file=/etc/tempo/tempo.yaml
        volumeMounts:
        - name: config
          mountPath: /etc/tempo
        - name: storage
          mountPath: /tmp/tempo
        resources:
          {{- toYaml .Values.tempo.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /ready
            port: 3200
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3200
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: tempo-config
      - name: storage
        {{- if .Values.tempo.persistence.enabled }}
        persistentVolumeClaim:
          claimName: tempo-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
{{- end }}
