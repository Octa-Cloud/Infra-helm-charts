# =============================================================================
# Saga Orchestration Service Helm Chart Values
# =============================================================================

# =============================================================================
# 이미지 설정
# =============================================================================
image:
  repository: octacloud/saga-orchestration-service
  tag: "419c99e6357e402a617057fe6836a0e7a677815f-18614370502"
  pullPolicy: IfNotPresent
# =============================================================================
# 서비스 설정
# =============================================================================
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
# =============================================================================
# 배포 설정
# =============================================================================
replicaCount: 2
# =============================================================================
# 리소스 설정
# =============================================================================
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 512Mi
# =============================================================================
# 헬스 체크 설정
# =============================================================================
livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 8080
  initialDelaySeconds: 300
  periodSeconds: 30
  failureThreshold: 5
  timeoutSeconds: 10
readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 8080
  initialDelaySeconds: 300
  periodSeconds: 30
  failureThreshold: 5
  timeoutSeconds: 10
# =============================================================================
# 환경 변수 설정
# =============================================================================
env:
  # Database configuration
  RDB_USERNAME: "monguser"
  RDB_PASSWORD: "mongpassword123"
  RDB_URL: "jdbc:mysql://localhost:3306/mong?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"
  # Logging
  LOG_LEVEL: "INFO"
  LOG_PROFILE: "text"
  # Kafka configuration
  KAFKA_BOOTSTRAP_SERVERS: "pkc-gq2xn.asia-northeast3.gcp.confluent.cloud:9092"
  KAFKA_SECURITY_PROTOCOL: "SASL_SSL"
  KAFKA_SASL_MECHANISM: "PLAIN"
# =============================================================================
# 서비스 계정 설정
# =============================================================================
serviceAccount:
  create: true
  name: ""
# =============================================================================
# ConfigMap 설정
# =============================================================================
configMap:
  create: true
  name: ""
# =============================================================================
# Secret 설정
# =============================================================================
secrets:
  create: true
  name: ""
  # Kafka SASL 인증 정보는 민감한 정보이므로 Sealed Secret으로 관리
  KAFKA_SASL_USERNAME: ""
  KAFKA_SASL_PASSWORD: ""
sealedSecrets:
  enabled: true
  encryptedData:
    KAFKA_SASL_USERNAME: "AgAo6UavD797TH/CEtBPSPIscef5Kb0ZUBM27jcJDFgFfk1EJMs4jFcYcur4ho6pcVEJcShe5hV6oc04uPJSioLoB9xHBBz9vs0qopLMpY6/s6PXG02Su68vFIKaLZPlaMAysDXF2v4nift77TRNv7MhhBLr2aV+yikh0Kx8RDl+ZbZIMEBi7JOd+/+LCU4md7p6PgihckXDdqenuPcS1vJkXZ7cSIOnRNnJsjoU+ZVOQ8CwoIYOUxoXMI4bGmKl+wFF7fV9KaYMH17entIYDaPkkD+X53A9DVXwQoUfTx0x15pXF2ip39aXiEKMXrqo3yTQnSO1NvYWhqdcesGbineyf+P8lAkLDOtdJ/Rd5u6OXKKr/PwbAfny1XkIqz27CUUgOlQlOur7lSVhXWFuHTzfRrJA6VOODlsDs6nmCo8N/RZtY/KNf0QGrYP4XEvBG28pl9st0d6uXuWgYKHUHra0jKz5y1TnqMGU0LCXDQ9KrU/fLZPEnxPIrvB/sVqHYTksOtUfL0B46zloxJLVCFK2BBwy0VgY907rbgJ9/sgQ2SudoK0LEOIL4QzKM/9mqkfc8rT0GTTvpDgsCjntkM0Yt+vcadkMn7M0p7v7yaWFsyRTNqAkXuJrf0CDXEYDBqZY3/+Xgwlx2Op58tGLYZH7PxY+a9T8YHcLZJ++axgTefx4H55/1LlKz/w8OBj0oM9XiPsuLZV10Eo="
    KAFKA_SASL_PASSWORD: "AgCM0haXcTQZuQi0gqE7ute52b/f84HWO9INWhsOAHO59609lC/iPVYGkRer2AO1/7y+2TrcKQ1iEuzjuvGP93DmWAGnN55FRJJGRQRWeKdcRJcrYUO7MrYY92IepXwlc5ZUBw19++yffDG0nYRVMyItm78vPiROOb0ScJFn/NBKfSwGzARjOPHaITglnZmwPlBgADh3eYTTtkGAIu7idVHUdzxKxtWn210VzqakhU6+p5ToApgRLZFtAlp5EDMqtQCAHVyTcPWGNQYnu86F2D1c94mQORWtm+7Hay+IiJhkEqdhuVuCEJXB4Y5VtSusao3Em8L4uy93ocmcUEmaqV9ieLDMTRPVxu2J1cmIpgwjTzHyYpOhKO07iOm9QTpJllKgMZJ+XOkoJuXVOlufQVjQQdH9a2vZebBoLrNL0RfiOVa1t66VFqgwm/vB7tDDQy4VIxs+onIP2IqDaKnb59rw7B4sd5ePKDLYoetdZJf32PkQy64UF4TaEvIMDC007ztFu0kmXAtR/z+qdCgDPmdxcwhzskIyb1M3JIKvqOZvVOoP3I15PCjxf6xLitNKUGy9uaVBUGfaTvUCOvbHMTwSjIQ7sj2lRe4IYVzmvOz/mOHGESlufgIm/4ilHfbTIHUMZwV26zmEKCQscaOUugBKda6PrYxzfrKh5WWZNzFoMAV9OZGSGGYrYJu0Wd9CdeZp8ZE0QQ0f1mz6P7ze6nDS"
# =============================================================================
# Ingress 설정
# =============================================================================
ingress:
  enabled: false # Saga orchestration service는 내부 서비스이므로 ingress 불필요
# =============================================================================
# 노드 선택자
# =============================================================================
nodeSelector: {}
# =============================================================================
# 톨러레이션
# =============================================================================
tolerations: []
# =============================================================================
# 어피니티
# =============================================================================
affinity: {}
# =============================================================================
# Cloud SQL Proxy 설정
# =============================================================================
cloudSqlProxy:
  enabled: true
  image: gcr.io/cloudsql-docker/gce-proxy:latest
  port: 3306
  instance: mong-develop:asia-northeast3:mong-mysql
# =============================================================================
# 추가 설정
# =============================================================================
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
imagePullSecrets: []
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70
lifecycle: {}
