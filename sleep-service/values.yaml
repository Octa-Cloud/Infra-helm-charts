# =============================================================================
# Sleep Service Helm Chart Values
# =============================================================================

# =============================================================================
# 이미지 설정
# =============================================================================
image:
  repository: octacloud/sleep-service
  tag: "311e80cb0146ecb8ea4ef4c1b0a9d627ba7af2c6-18567711625"
  pullPolicy: IfNotPresent
# =============================================================================
# 서비스 설정
# =============================================================================
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
# =============================================================================
# 배포 설정
# =============================================================================
replicaCount: 1
# Rolling Update 비활성화 (문제 파드 방지)
strategy:
  type: Recreate
# =============================================================================
# 리소스 설정
# =============================================================================
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi
# =============================================================================
# 헬스 체크 설정
# =============================================================================
livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 8080
  initialDelaySeconds: 300
  periodSeconds: 30
  failureThreshold: 5
  timeoutSeconds: 10
readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 8080
  initialDelaySeconds: 300
  periodSeconds: 30
  failureThreshold: 5
  timeoutSeconds: 10
# =============================================================================
# 환경 변수 설정
# =============================================================================
env:
  SPRING_PROFILES_ACTIVE: "dev"
  MONGO_URI: "mongodb://10.0.0.45:27017/mong"
  SPRING_DATA_REDIS_HOST: "10.226.34.155"
  SPRING_DATA_REDIS_PORT: "6379"
# =============================================================================
# 서비스 계정 설정
# =============================================================================
serviceAccount:
  create: true
  name: ""
# =============================================================================
# ConfigMap 설정
# =============================================================================
configMap:
  create: true
  name: ""
# =============================================================================
# Secret 설정
# =============================================================================
secrets:
  create: true
  name: ""
  # JWT_KEY는 민감한 정보이므로 Secret으로 관리
  JWT_KEY: ""
sealedSecrets:
  enabled: true
  encryptedData:
    JWT_KEY: "AgCzov2FTvDIorG/o7OCvrAa0YkSq1A5wea8eHmntjh9qY3DCObTs9Vm/uMWrHXvY/0K+DRg5eWIt8Q0LH2bl5Azsfg20h7SctCgiVqMKRjlNl9UvHQ1mXvp3w3WQ1qGgjdk6QP0AaQ9Tf0KKooZhzn4ChCLAeusFnARmf/e8yzQcSK5L6tZCya1IBnJNXhg8u//X/RIv7gU+Nwt75JZkdDsQxo5QoTle/3OqIofdXPhj6wFjyBgG6hPuxGi3Hpn2itAXukBuFlpqrJ9Y1BPOPIhdE7YHUfcFE9LWSMBA8ZNIzIsIp6FFBp2sXmWSxmTJH5SrYzXHoX2dghPSZywZEzf1Ez6ECu2ltaZkYvzlD3rnSoWCf0KWqhhOe7Y/so3fR+msBdcHWi4+zU2wYYkvkTFmcqqbhBfa/TCCyBHvJcoLByNNAu9XPfAiPyr/woSYAEx65hXgtLtugUXO/gv/dOKP65s7CHaPvkXSNttBnKBtqOmpPXmqTl8VsfGZw9Q7hK2Mmf+TXGeQXiYo1oX0X+06TM983HtoNt1v7LIYn09TZIRA7Px3r7uDar8qhLuqgulHWm8spdc/DVEG+Xl3NaagJNj69ZNVnst+n01IlEr65vXyAaCqXenEM2qqGPD9wZtfpC6b4w3R7Jk7+WHDwqwj2Ok57oBLRj1oVROpMqKecVmOvTBYO6zhaaVq8rY+WMtxSLbThP8NTNg1AuBoQ9M3NnBSnukZBM4E0wGlpyDRBookIvAMMWe2FbI1362IDk7FjL2WfilJoHLDXg5/or+K0H7x62XbMXtMNspdv0/2jcX5WnhoLf87A=="
# =============================================================================
# Ingress 설정
# =============================================================================
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/auth-url: "http://auth-service.microservices-dev.svc.cluster.local:8080/api/auth/internal"
    nginx.ingress.kubernetes.io/auth-method: "POST"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
  hosts:
    - host: "mong.live"
      paths:
        - path: /api/sleep
          pathType: Prefix
  tls:
    - secretName: mong-live-tls
      hosts:
        - "mong.live"
# =============================================================================
# Cloud SQL Proxy 설정 (필요시)
# =============================================================================
cloudSqlProxy:
  enabled: false
  port: 3306
  connectionName: ""
# =============================================================================
# 노드 선택자
# =============================================================================
nodeSelector: {}
# =============================================================================
# 톨러레이션
# =============================================================================
tolerations: []
# =============================================================================
# 어피니티
# =============================================================================
affinity: {}
# =============================================================================
# 배포 전략 설정
# =============================================================================
blueGreen:
  enabled: false # Rolling Update 사용
# =============================================================================
# 추가 설정
# =============================================================================
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8080"
podSecurityContext: {}
securityContext: {}
imagePullSecrets: []
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70
lifecycle: {}
# =============================================================================
# Metrics 설정
# =============================================================================
metrics:
  enabled: true
