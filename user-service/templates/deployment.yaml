apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "user-service.fullname" . }}
  labels:
    {{- include "user-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  progressDeadlineSeconds: 1200
  selector:
    matchLabels:
      {{- include "user-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "user-service.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "user-service.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            {{- if .Values.configMap.create }}
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "user-service.fullname" . }}-configmap
                  key: SPRING_PROFILES_ACTIVE
            - name: RDB_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "user-service.fullname" . }}-configmap
                  key: RDB_URL
            - name: RDB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "user-service.fullname" . }}-configmap
                  key: RDB_USERNAME
            - name: SPRING_DATA_REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "user-service.fullname" . }}-configmap
                  key: SPRING_DATA_REDIS_HOST
            - name: SPRING_DATA_REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "user-service.fullname" . }}-configmap
                  key: SPRING_DATA_REDIS_PORT
            - name: SMTP_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "user-service.fullname" . }}-configmap
                  key: SMTP_HOST
            - name: SMTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "user-service.fullname" . }}-configmap
                  key: SMTP_PORT
            {{- end }}
            {{- if .Values.secrets.create }}
            - name: JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "user-service.fullname" . }}-secret
                  key: jwt-secret
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "user-service.fullname" . }}-secret
                  key: smtp-username
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "user-service.fullname" . }}-secret
                  key: smtp-password
            - name: RDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "user-service.fullname" . }}-secret
                  key: rdb-password
            {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.cloudSqlProxy.enabled }}
        - name: cloud-sql-proxy
          image: {{ .Values.cloudSqlProxy.image }}
          command:
            - "/cloud_sql_proxy"
            - "-instances={{ .Values.cloudSqlProxy.instance }}=tcp:{{ .Values.cloudSqlProxy.port }}"
            - "-credential_file=/secrets/cloudsql/credentials.json"
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
        {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.cloudSqlProxy.enabled }}
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloud-sql-instance-credentials
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
